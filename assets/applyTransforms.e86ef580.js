var x=Object.defineProperty;var a=(e,o)=>x(e,"name",{value:o,configurable:!0});import{Project as d,ts as r}from"https://esm.sh/ts-morph@^14.0.0";function g(e){return e.__replacePatterns}a(g,"getReplacePatterns");function S(e,o){const f=new d({useInMemoryFileSystem:!0,compilerOptions:{strict:!0,target:r.ScriptTarget.ESNext,module:r.ModuleKind.ESNext,moduleResolution:r.ModuleResolutionKind.NodeNext,forceConsistentCasingInFileNames:!0,allowSyntheticDefaultImports:!0,esModuleInterop:!0,jsx:r.JsxEmit.Preserve}}),u=typeof e=="string"?{"file.tsx":e}:e,s={};for(const t in u)s[t]=f.createSourceFile(t,u[t]);const n={};for(const t in s){const c=s[t];for(const i of o)i(c);const p=g(c)||{};let l=c.getText();for(const[i,m]of Object.entries(p))l=l.replaceAll(i,m);n[t]=l}return typeof e=="string"?Object.values(n)[0]:n}a(S,"applyTransforms");export{S as default};
